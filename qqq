warning: LF will be replaced by CRLF in credentials.example.json.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in lib/downloader.js.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in lib/ftp-upload.js.
The file will have its original line endings in your working directory.
[1mdiff --git a/credentials.example.json b/credentials.example.json[m
[1mindex dbcfa40..8ccce83 100644[m
[1m--- a/credentials.example.json[m
[1m+++ b/credentials.example.json[m
[36m@@ -1,5 +1,11 @@[m
 {[m
   "__comment": "Rename me to credentials.json with valid values",[m
   "token": "discord token",[m
[31m-  "dbauth": "full login url for database"[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m  "dbauth": "full login url for database",[m
[32m+[m[32m  "ftp": {[m
[32m+[m[32m    "host": "",[m
[32m+[m[32m    "user": "",[m
[32m+[m[32m    "password": "",[m
[32m+[m[32m    "cwd": ""[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/lib/downloader.js b/lib/downloader.js[m
[1mindex cf8c7a2..4d0f30f 100644[m
[1m--- a/lib/downloader.js[m
[1m+++ b/lib/downloader.js[m
[36m@@ -4,9 +4,9 @@[m [mconst needle = require('needle');[m
 [m
 const MAX_FILE_SIZE = 10485760; // 10mb[m
 const MSG = {[m
[31m-  BAD_STATUS_CODE: 'Bad status code from server: ',[m
[31m-  UNKNOWN_SIZE: 'Unknown file size, use a better host',[m
[31m-  FILE_TOO_LARGE: `File is too big (max ${MAX_FILE_SIZE / 1024 / 1024}mb)`,[m
[32m+[m[32m  BAD_STATUS_CODE: 'Failed, bad status code from download link: ',[m
[32m+[m[32m  UNKNOWN_SIZE: 'Failed, unknown file size, use a better host',[m
[32m+[m[32m  FILE_TOO_LARGE: `Failed, file is too big (max ${MAX_FILE_SIZE / 1024 / 1024}mb)`,[m
 };[m
 [m
 /**[m
[1mdiff --git a/lib/ftp-upload.js b/lib/ftp-upload.js[m
[1mindex 3ac4816..8289e79 100644[m
[1m--- a/lib/ftp-upload.js[m
[1m+++ b/lib/ftp-upload.js[m
[36m@@ -4,7 +4,8 @@[m [mconst path = require('path');[m
 [m
 function getValidFilename(wantedName, fileNames) {[m
   const wantedLower = path.basename(wantedName.toLowerCase(), '.pbo');[m
[31m-  const matches = fileNames.map(v => path.basename(v.toLowerCase(), '.pbo'))[m
[32m+[m[32m  const matches = fileNames[m
[32m+[m[32m    .map(v => path.basename(v.toLowerCase(), '.pbo'))[m
     .filter(v => v.startsWith(wantedLower));[m
 [m
   let i = 0;[m
[36m@@ -29,13 +30,12 @@[m [mexports.uploadPbo = (ftpOptions, pboFilepath, wantedUploadName, callback) => {[m
     user: ftpOptions.user,[m
     password: ftpOptions.password[m
   })[m
[31m-    .then(() => sftp.list(ftpOptions.workDir))[m
[32m+[m[32m    .then(() => sftp.list(ftpOptions.cwd))[m
     .then(allFiles => {[m
       const pboFiles = getPboNames(allFiles);[m
       uploadedAs = getValidFilename(wantedUploadName, pboFiles);[m
[31m-[m
       if (!uploadedAs.endsWith('.pbo')) uploadedAs += '.pbo';[m
[31m-      return sftp.put(pboFilepath, path.join(ftpOptions.workDir, uploadedAs))[m
[32m+[m[32m      return sftp.put(pboFilepath, `${ftpOptions.cwd}/${uploadedAs}`);[m
     })[m
     .then(() => {[m
       sftp.end();[m
[1mdiff --git a/lib/pbo-tools.js b/lib/pbo-tools.js[m
[1mindex a1150c7..63b04d6 100644[m
[1m--- a/lib/pbo-tools.js[m
[1m+++ b/lib/pbo-tools.js[m
[36m@@ -24,7 +24,8 @@[m [mexports.extractPbo = (pboFilePath, callback) => {[m
  * @param callback[m
  */[m
 exports.lintPboFolder = (folderPath, callback) => {[m
[31m-  const command = `makepbo -PQ ${folderPath}`;[m
[32m+[m[32m  // the bla.pbo is just to stop makepbo from deleting the actual pbo we want to upload[m
[32m+[m[32m  const command = `makepbo -PQ ${folderPath} bla.pbo`;[m
   child_process.exec(command, (err, stdout, stderr) => {[m
     if (!err) return callback(null, {ok: true});[m
 [m
warning: LF will be replaced by CRLF in lib/pbo-tools.js.
The file will have its original line endings in your working directory.
